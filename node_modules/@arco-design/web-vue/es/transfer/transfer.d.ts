import { PropType } from 'vue';
import { DataInfo, TransferItem } from './interface';
declare const _default: import("vue").DefineComponent<{
    data: {
        type: PropType<TransferItem[]>;
        default: () => never[];
    };
    modelValue: {
        type: PropType<string[]>;
        default: undefined;
    };
    defaultValue: {
        type: PropType<string[]>;
        default: () => never[];
    };
    selected: {
        type: PropType<string[]>;
        default: undefined;
    };
    defaultSelected: {
        type: PropType<string[]>;
        default: () => never[];
    };
    disabled: {
        type: BooleanConstructor;
        default: boolean;
    };
    simple: {
        type: BooleanConstructor;
        default: boolean;
    };
    oneWay: {
        type: BooleanConstructor;
        default: boolean;
    };
    showSearch: {
        type: BooleanConstructor;
        default: boolean;
    };
    title: {
        type: PropType<string[]>;
        default: () => string[];
    };
    onChange: (ArrayConstructor | FunctionConstructor)[];
    onSelect: (ArrayConstructor | FunctionConstructor)[];
    onSearch: (ArrayConstructor | FunctionConstructor)[];
}, {
    prefixCls: string;
    cls: import("vue").ComputedRef<(string | {
        [x: string]: boolean;
    })[]>;
    dataInfo: import("vue").ComputedRef<{
        sourceInfo: DataInfo;
        targetInfo: DataInfo;
    }>;
    computedSelected: import("vue").ComputedRef<string[]>;
    sourceTitle: import("vue").ComputedRef<string>;
    targetTitle: import("vue").ComputedRef<string>;
    handleClick: (target: 'target' | 'source') => void;
    handleSelect: (values: string[]) => void;
    handleSearch: (value: string, type: 'target' | 'source') => void;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, ("update:modelValue" | "change" | "select" | "search" | "update:selected")[], "update:modelValue" | "change" | "select" | "search" | "update:selected", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    data?: unknown;
    modelValue?: unknown;
    defaultValue?: unknown;
    selected?: unknown;
    defaultSelected?: unknown;
    disabled?: unknown;
    simple?: unknown;
    oneWay?: unknown;
    showSearch?: unknown;
    title?: unknown;
    onChange?: unknown;
    onSelect?: unknown;
    onSearch?: unknown;
} & {
    disabled: boolean;
    defaultValue: string[];
    data: TransferItem[];
    title: string[];
    simple: boolean;
    showSearch: boolean;
    defaultSelected: string[];
    oneWay: boolean;
} & {
    onChange?: Function | unknown[] | undefined;
    modelValue?: string[] | undefined;
    onSelect?: Function | unknown[] | undefined;
    onSearch?: Function | unknown[] | undefined;
    selected?: string[] | undefined;
}> & {
    "onUpdate:modelValue"?: ((...args: any[]) => any) | undefined;
    onChange?: ((...args: any[]) => any) | undefined;
    onSelect?: ((...args: any[]) => any) | undefined;
    onSearch?: ((...args: any[]) => any) | undefined;
    "onUpdate:selected"?: ((...args: any[]) => any) | undefined;
}, {
    disabled: boolean;
    modelValue: string[];
    defaultValue: string[];
    data: TransferItem[];
    title: string[];
    simple: boolean;
    selected: string[];
    showSearch: boolean;
    defaultSelected: string[];
    oneWay: boolean;
}>;
export default _default;
